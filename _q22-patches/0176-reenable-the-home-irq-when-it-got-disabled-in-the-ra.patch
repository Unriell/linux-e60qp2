From a365e7b2054074c6dd5a454ae4d3578edd7d5e20 Mon Sep 17 00:00:00 2001
From: Heiko Stuebner <heiko@sntech.de>
Date: Tue, 26 Nov 2013 16:35:13 +0100
Subject: [PATCH 176/200] reenable the home-irq when it got disabled in the
 race-condition

---
 kernel/irq/chip.c | 8 +++++---
 kernel/irq/pm.c   | 7 +++++++
 2 files changed, 12 insertions(+), 3 deletions(-)

diff --git a/kernel/irq/chip.c b/kernel/irq/chip.c
index b67cfc5..43a521f 100644
--- a/kernel/irq/chip.c
+++ b/kernel/irq/chip.c
@@ -138,13 +138,11 @@ EXPORT_SYMBOL_GPL(irq_get_irq_data);
 
 static void irq_state_clr_disabled(struct irq_desc *desc)
 {
-if (desc->irq_data.irq == 344) dump_stack();
 	irqd_clear(&desc->irq_data, IRQD_IRQ_DISABLED);
 }
 
 static void irq_state_set_disabled(struct irq_desc *desc)
 {
-if (desc->irq_data.irq == 344) dump_stack();
 	irqd_set(&desc->irq_data, IRQD_IRQ_DISABLED);
 }
 
@@ -466,9 +464,13 @@ if (irq == 344) printk("disabled %d, in_progress %d, desc-action %d\n", irqd_irq
 	if (unlikely(irqd_irq_disabled(&desc->irq_data) ||
 		     irqd_irq_inprogress(&desc->irq_data) || !desc->action)) {
 		if (!irq_check_poll(desc)) {
-if (irq != 344) // only set other irqs pending, due to the race of the homebutton irq
+if (irq != 344) { // only set other irqs pending, due to the race of the homebutton irq
 			desc->istate |= IRQS_PENDING;
 			mask_ack_irq(desc);
+} else {
+		if (desc->irq_data.chip->irq_ack)
+			desc->irq_data.chip->irq_ack(&desc->irq_data);
+}
 			goto out_unlock;
 		}
 	}
diff --git a/kernel/irq/pm.c b/kernel/irq/pm.c
index 372f885..1156734 100644
--- a/kernel/irq/pm.c
+++ b/kernel/irq/pm.c
@@ -66,7 +66,14 @@ static void resume_irqs(bool want_early)
  */
 static void irq_pm_syscore_resume(void)
 {
+	struct irq_desc *homedesc = irq_to_desc(344);
+
 	resume_irqs(true);
+
+	if (unlikely(irqd_irq_disabled(&homedesc->irq_data))) {
+		printk("home-interrupt was disabled, reenabling\n");
+		irq_enable(homedesc);
+	}
 }
 
 static struct syscore_ops irq_pm_syscore_ops = {
-- 
2.5.3

